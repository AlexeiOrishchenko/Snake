По игре:
- Закрыть потоки ( Либо перейду на Flow, либо помудрю с этим еще )
- Пометь голову ( на задницу )))
- Допилить смену скорости ( Сделаю рандомное ускорение или замедление )
- Сделать счет ( не понятно сколько и чего в процессе игры )
- Общий класс для старта ( ближе к финальной версии игры сделаю )
- Условие победы
- ЦВЕТА в enum ( Пока думаю над этим, ибо парсинг цвета затратный увы )
- Сериализация ( класс Setting пока не готов, подумаю что можно будет менять из файла )
- Класс проверки данных при десериализаии ( Например roomHeight не может быть символом )
- Экран при перезаходе в игру полный или не полный ( После сериализации только возможно )
- Автоопределение цвета ( Пока это проблема )
- Сетеры для цветов настроить в вехний регистр ( Если с Enum не разберусь - как вариант )
- Дописать README ( Пока впадлу )
- Lombok ( Внедряю потихоньку в процессе рефакторинга )
- jUnit ( В ближайшем будущем все покрою тестами )
- Разобраться и допилить roomWidth и roomHeight с учетом рамки ( пока реализовано Индусами )))
- MVC - обьязательно сделать все по шаблону ( нету лучше карате чем в пакетах MVC )

Next version:
- Вынести из PlayGUI в controller управление, этим же действием удалить зависимость Room от PlayGUI,
    так же разобраться куда деть очередь с ее методамии;
- Создать прослойку controller - view вызывает методы контроллера для работы с model, а модел контроллер;
- Refactor Room класс, много методов нужно делегировать в CONTROLLER;
- Разобатся в component что нужно делегировать в CONTROLLER;
- Добавить через контроллер закрытие главного окна при нажатии Play и открытие при проиграше;
- подумать об Observer;
- Разорвать зависимости из Room;
- Допилить закрывалку на крестик в игре;
- Несколько кусков змеи в начале игры;
